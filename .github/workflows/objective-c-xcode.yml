name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Show Xcode Path
        run: sudo xcode-select --print-path
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          xcodebuild -list -json | grep -q "\"$scheme\"" || { echo "Scheme $scheme not found in the project/workspace"; exit 1; }
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          if [ -z "$file_to_build" ]; then echo "No .xcworkspace or .xcodeproj file found in the repository root"; exit 1; fi
          destination=$(xcodebuild -showdestinations -scheme "$scheme" | grep 'platform:macOS' | head -n 1 | grep -o 'id:.*' | cut -d':' -f2 | tr -d ' ')
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "id=$destination" | xcpretty && exit ${PIPESTATUS[0]}
